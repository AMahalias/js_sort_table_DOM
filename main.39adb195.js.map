{"version":3,"sources":["scripts/main.js"],"names":["tableHeader","document","querySelector","tableBody","employeesList","getEmployees","list","employee","name","position","age","salary","children","child","arrayEmployees","innerText","split","employeeRow","push","sortName","sort","a","b","localeCompare","sortPosition","sortAge","age1","createNumber","sortSalary","salaryA","addSortedColumn","array","innerHTML","forEach","object","insertAdjacentHTML","string","includes","slice","replace","addEventListener","e","element","target"],"mappings":"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","file":"main.39adb195.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHeader = document.querySelector('thead');\nconst tableBody = document.querySelector('tbody');\nconst employeesList = [];\n\nfunction getEmployees(list) {\n  const employee = {\n    name: list[0],\n    position: list[1],\n    age: list[2],\n    salary: list[3],\n  };\n\n  return employee;\n}\n\nfor (const child of tableBody.children) {\n  const arrayEmployees = child.innerText.split('\\t');\n  const employeeRow = getEmployees(arrayEmployees);\n\n  employeesList.push(employeeRow);\n}\n\ntableHeader.addEventListener('click', e => {\n  const element = e.target;\n\n  switch (element.innerText) {\n    case ('Name'):\n      const sortedByName = sortName(employeesList);\n\n      addSortedColumn(sortedByName);\n      break;\n\n    case ('Position'):\n      const sortedByPosition = sortPosition(employeesList);\n\n      addSortedColumn(sortedByPosition);\n      break;\n\n    case ('Age'):\n      const sortedByAge = sortAge(employeesList);\n\n      addSortedColumn(sortedByAge);\n      break;\n\n    case ('Salary'):\n      const sortedBySalary = sortSalary(employeesList);\n\n      addSortedColumn(sortedBySalary);\n      break;\n  }\n});\n\nfunction sortName(list) {\n  return list.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  });\n}\n\nfunction sortPosition(list) {\n  return list.sort((a, b) => {\n    return a.position.localeCompare(b.position);\n  });\n}\n\nfunction sortAge(list) {\n  return list.sort((a, b) => {\n    const age1 = createNumber(a.age);\n    const age2 = createNumber(b.age);\n\n    return age1 - age2;\n  });\n}\n\nfunction sortSalary(list) {\n  return list.sort((a, b) => {\n    const salaryA = createNumber(a.salary);\n    const salaryB = createNumber(b.salary);\n\n    return salaryA - salaryB;\n  });\n}\n\nfunction addSortedColumn(array) {\n  tableBody.innerHTML = '';\n\n  return array.forEach(object => {\n    tableBody.insertAdjacentHTML('beforeend', `\n    <tr>\n      <td>${object.name}</td>\n      <td>${object.position}</td>\n      <td>${object.age}</td>\n      <td>${object.salary}</td>\n    </tr>\n    `);\n  });\n}\n\nfunction createNumber(string) {\n  if (string.includes('$')) {\n    return +(string.slice(1).replace(',', '.'));\n  } else {\n    return +string;\n  }\n}\n"]}